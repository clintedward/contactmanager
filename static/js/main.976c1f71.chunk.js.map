{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.976c1f71.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n    case 'UPDATE_CONTACT':\r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n        };\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get ('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n// Using context API for the application state to have access to these contacts from any component.","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false //handle to show email and phone\r\n  }\r\n\r\n  \r\n\r\n  onShowClick = e => {\r\n    this.setState({showContactInfo: !this.state.showContactInfo});\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n  };\r\n\r\n\r\n  // Expression to toggle the dropdown arrow.\r\n  // Add a pointer to hover over dropdown arrow.\r\n  // Add a delete button for contacts.\r\n  render() {\r\n    const {id, name, email, phone } = this.props.contact; //using destructuring for neater code loyout\r\n    const {showContactInfo} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}{' '} <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }} />\r\n                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>   \r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n   \r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n        <Consumer> \r\n            {value => {\r\n                const {contacts} = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact key={contact.id} contact={contact}\r\n                            />\r\n                        ))}\r\n                    </React.Fragment> \r\n                );\r\n            }} \r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n\r\n//This is to create a state, and embedding components into other components. \r\n//Inside Contacts component we have state that holds all different objects (contact list). \r\n//Then loop through each contacts in each state and output a specific contact component for each contact. ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n  const {branding} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a> \r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"/>  Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"/>  Add</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"/>  About</Link>\r\n              </li>\r\n               \r\n            </ul>    \r\n          </div>       \r\n        </div>\r\n\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    \r\n  return (\r\n      <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <input\r\n              type={type}\r\n              name={name}\r\n              className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={onChange}\r\n          />\r\n          {error && <div className=\"invalid-feedback\">\r\n              {error}\r\n          </div>}\r\n      </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n class AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n       e.preventDefault();\r\n       \r\n       const { name, email, phone } = this.state;\r\n\r\n       //check for errors\r\n       if (name === '') {\r\n           this.setState({\r\n               errors: { name: 'Name is required'}\r\n           });\r\n           return;\r\n       }\r\n       if (email === '') {\r\n           this.setState({\r\n               errors: { email: 'Email is required'}\r\n           });\r\n           return;\r\n       }\r\n       if (phone === '') {\r\n           this.setState({\r\n               errors: { phone: 'Phone is required'}\r\n           });\r\n           return;\r\n       }\r\n\r\n       const newContact = {\r\n          name,\r\n          email,\r\n          phone \r\n       };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        \r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n            \r\n\r\n        \r\n        \r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n   \r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return(\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                              <TextInputGroup\r\n                                  label=\"Name\"\r\n                                  name=\"name\"\r\n                                  placeholder=\"Enter Name\"\r\n                                  value={name}\r\n                                  onChange={this.onChange}\r\n                                  error={errors.name}\r\n                                  \r\n                              />\r\n                              <TextInputGroup\r\n                                  label=\"Email\"\r\n                                  name=\"email\"\r\n                                  type=\"email\"\r\n                                  placeholder=\"Enter Email\"\r\n                                  value={email}\r\n                                  onChange={this.onChange}\r\n                                  error={errors.email}\r\n                              />\r\n                              <TextInputGroup\r\n                                  label=\"Phone\"\r\n                                  name=\"phone\"\r\n                                  placeholder=\"Enter Phone\"\r\n                                  value={phone}\r\n                                  onChange={this.onChange}\r\n                                  error={errors.phone}\r\n                              />\r\n                               \r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Add Contact\"\r\n                                    className=\"btn btn-light btn-block\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n// import axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        \r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n       \r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n          <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; //BrowserRouter will change to Hash Router for github pages\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from './context';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      //props used is 'branding, name, email, phone'\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/Edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}